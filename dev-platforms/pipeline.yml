resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
    tag: latest

resources:
  - name: terraform
    type: terraform
    source:
      backend_type: gcs
      backend_config:
        bucket: dev-platforms
        prefix: terraform/state
        credentials: ((gcp_credentials_json))
  - name: studio-ci
    type: git
    source:
      branch: pool
      uri: https://github.com/williammartin/studio-ci.git
  - name: studio-deployment
    type: git
    source:
      branch: wip-auth
      uri: https://github.com/williammartin/studio-deployment.git
  - name: ready-pool
    type: pool
    source:
      branch: master
      uri: git@github.com:williammartin/dev-platform-pool.git
      pool: dev-platforms
      private_key: ((dev_platform_pool_deploy_key))
  - name: broken-pool
    type: pool
    source:
      branch: master
      uri: git@github.com:williammartin/dev-platform-pool.git
      pool: broken-dev-platforms
      private_key: ((dev_platform_pool_deploy_key))
  - name: building-pool
    type: pool
    source:
      branch: master
      uri: git@github.com:williammartin/dev-platform-pool.git
      pool: building-dev-platforms
      private_key: ((dev_platform_pool_deploy_key))
  - name: pool-repo
    type: git
    source:
      branch: master
      uri: git@github.com:williammartin/dev-platform-pool.git
      private_key: ((dev_platform_pool_deploy_key))
  - name: create-dev-platforms-trigger
    type: git
    source:
      branch: master
      uri: git@github.com:williammartin/dev-platform-pool.git
      private_key: ((dev_platform_pool_deploy_key))
      paths:
        - .trigger-dev-platforms-create # updated by check-pool-size
  - name: 5m
    type: time
    source:
      interval: 5m

jobs:
  - name: create-dev-platform
    plan:
      - in_parallel:
        - get: studio-ci
        - get: studio-deployment
        - get: create-dev-platforms-trigger
          trigger: true
      - task: generate-fake-env-for-building-pool
        file: studio-ci/dev-platforms/tasks/generate-fake-env-for-building-pool.yml
      - put: building-pool
        params:
          add_claimed: fake-placeholder-env/
      - do:
        - put: terraform
          params:
            generate_random_name: true
            delete_on_failure: true
            terraform_source: studio-deployment/
            vars: &terraform-vars
              credentials: ((gcp_credentials_json))
              project: storyscript-ci
              location: europe-west4
              region: europe-west4
              dns_zone_name: storyscript-ci
              domain: storyscript-ci.com
        - put: ready-pool
          params:
            add: terraform/
        - put: building-pool
          params:
            remove: fake-placeholder-env/
        on_failure:
          in_parallel:
          - put: terraform
            params:
              action: destroy
              env_name_file: terraform/name
              terraform_source: studio-deployment
              vars: *terraform-vars
            get_params:
              action: destroy
          - put: building-pool
            params:
              remove: fake-placeholder-env/

  - name: delete-dev-platform
    plan:
      - in_parallel:
        - get: studio-ci
        - get: studio-deployment
        - get: broken-pool
          passed:
            - check-broken-pool-size
          trigger: true
      - do:
        - put: terraform
          params:
            action: destroy
            env_name_file: broken-pool/name
            terraform_source: studio-deployment
            vars: *terraform-vars
          get_params:
            action: destroy
        - put: broken-pool
          params:
            remove: broken-pool/
        on_failure:
          put: broken-pool
          params:
            release: broken-pool/

  - name: check-pool-size
    plan:
      - in_parallel:
        - get: studio-ci
        - get: pool-repo
        - get: 5m
          trigger: true
      - task: check-pool-size
        file: studio-ci/dev-platforms/tasks/check-pool-size.yml
        input_mapping:
          env-pool: pool-repo
        params:
          MIN_UNCLAIMED_COUNT: 1
      - put: pool-repo
        params:
          repository: updated-env-pool
          rebase: true

  - name: check-broken-pool-size
    plan:
      - in_parallel:
        - get: studio-ci
        - get: pool-repo
        - get: 5m
          trigger: true
      - try:
          task: check-broken-pool-size
          file: studio-ci/dev-platforms/tasks/check-broken-pool-size.yml
          input_mapping:
            env-pool: pool-repo
          on_success:
            put: broken-pool
            params:
              acquire: true
