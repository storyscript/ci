---
resources:
  - name: studio-ci
    type: git
    source:
      branch: master
      uri: https://github.com/storyscriptinc/ci.git

  ### auth
  - name: auth-release
    type: github-release
    source:
      owner: storyscript
      repository: auth
      access_token: {{storyscript-infra-access-token}}

  - name: auth-repo
    type: git
    source:
      uri: git@github.com:storyscript/auth.git
      private_key: ((storyscript-infra-ssh-key))

  - name: auth-image
    type: docker-image
    source:
      repository: storyscript/auth
      username: {{dockerhub-username}}
      password: {{dockerhub-password}}

  ### Creds
  - name: creds-release
    type: github-release
    source:
      owner: storyscript
      repository: creds
      access_token: {{storyscript-infra-access-token}}

  - name: creds-repo
    type: git
    source:
      uri: git@github.com:storyscript/creds.git
      private_key: ((storyscript-infra-ssh-key))

  - name: creds-image
    type: docker-image
    source:
      repository: storyscript/creds
      username: {{dockerhub-username}}
      password: {{dockerhub-password}}

  ### GEH
  - name: geh-release
    type: github-release
    source:
      owner: storyscript
      repository: geh
      access_token: {{storyscript-infra-access-token}}

  - name: geh-repo
    type: git
    source:
      uri: git@github.com:storyscript/geh.git
      private_key: ((storyscript-infra-ssh-key))

  - name: geh-image
    type: docker-image
    source:
      repository: storyscript/geh
      username: {{dockerhub-username}}
      password: {{dockerhub-password}}

  ### GraphQL
  - name: graphql-release
    type: github-release
    source:
      owner: storyscript
      repository: graphql
      access_token: {{storyscript-infra-access-token}}

  - name: graphql-repo
    type: git
    source:
      uri: git@github.com:storyscript/graphql.git
      private_key: ((storyscript-infra-ssh-key))

  - name: graphql-image
    type: docker-image
    source:
      repository: storyscript/graphql
      username: {{dockerhub-username}}
      password: {{dockerhub-password}}

  ### HTTP Service
  - name: http-release
    type: github-release
    source:
      owner: storyscript
      repository: http
      access_token: {{storyscript-infra-access-token}}

  - name: http-repo
    type: git
    source:
      uri: git@github.com:storyscript/http.git
      private_key: ((storyscript-infra-ssh-key))

  - name: http-image
    type: docker-image
    source:
      repository: storyscript/http
      username: {{dockerhub-username}}
      password: {{dockerhub-password}}

  ### Router
  - name: router-release
    type: github-release
    source:
      owner: storyscript
      repository: router
      access_token: {{storyscript-infra-access-token}}

  - name: router-repo
    type: git
    source:
      uri: git@github.com:storyscript/router.git
      private_key: ((storyscript-infra-ssh-key))

  - name: router-image
    type: docker-image
    source:
      repository: storyscript/router
      username: {{dockerhub-username}}
      password: {{dockerhub-password}}

  ### Runtime
  - name: runtime-release
    type: github-release
    source:
      owner: storyscript
      repository: runtime
      access_token: {{storyscript-infra-access-token}}

  - name: runtime-repo
    type: git
    source:
      uri: git@github.com:storyscript/runtime.git
      private_key: ((storyscript-infra-ssh-key))

  - name: runtime-image
    type: docker-image
    source:
      repository: storyscript/runtime
      username: {{dockerhub-username}}
      password: {{dockerhub-password}}

  ### Schema
  - name: schema-release
    type: github-release
    source:
      owner: storyscript
      repository: database
      access_token: {{storyscript-infra-access-token}}

  - name: schema-repo
    type: git
    source:
      uri: git@github.com:storyscript/database.git
      private_key: ((storyscript-infra-ssh-key))

  - name: schema-image
    type: docker-image
    source:
      repository: storyscript/schema
      username: {{dockerhub-username}}
      password: {{dockerhub-password}}

  ### Schema CI
  - name: schema-ci-repo
    type: git
    source:
      uri: git@github.com:storyscript/database.git
      paths:
        - ci/docker/
      private_key: ((storyscript-infra-ssh-key))

  - name: schema-ci-image
    type: docker-image
    source:
      repository: storyscript/schema-ci
      username: {{dockerhub-username}}
      password: {{dockerhub-password}}

  ### SLS
  - name: sls-release
    type: github-release
    source:
      owner: storyscript
      repository: sls
      access_token: {{storyscript-infra-access-token}}

  - name: sls-repo
    type: git
    source:
      uri: git@github.com:storyscript/sls.git
      private_key: ((storyscript-infra-ssh-key))

  - name: sls-image
    type: docker-image
    source:
      repository: storyscript/sls
      username: {{dockerhub-username}}
      password: {{dockerhub-password}}

  ### Studio
  - name: studio-release
    type: github-release
    source:
      owner: storyscript
      repository: studio
      access_token: {{storyscript-infra-access-token}}

  - name: studio-repo
    type: git
    source:
      uri: git@github.com:storyscript/studio.git
      private_key: ((storyscript-infra-ssh-key))

  - name: studio-image
    type: docker-image
    source:
      repository: storyscript/studio
      username: {{dockerhub-username}}
      password: {{dockerhub-password}}

  ### Worker
  - name: worker-release
    type: github-release
    source:
      owner: storyscript
      repository: worker
      access_token: {{storyscript-infra-access-token}}

  - name: worker-repo
    type: git
    source:
      uri: git@github.com:storyscript/worker.git
      private_key: ((storyscript-infra-ssh-key))

  - name: worker-image
    type: docker-image
    source:
      repository: storyscript/worker
      username: {{dockerhub-username}}
      password: {{dockerhub-password}}

jobs:
  ### Auth
  - name: build-auth-latest
    plan:
      - get: auth-repo
        trigger: true
      - put: auth-image
        params:
          build: auth-repo
          tag_as_latest: true

  - name: build-auth-release
    plan:
      - get: studio-ci
      - get: auth-release
        trigger: true
        params:
          include_source_tarball: true
      - task: untar-release
        file: studio-ci/docker-images/tasks/untar-release.yml
        input_mapping: {release: auth-release}
        output_mapping: {source: auth-source}
      - put: auth-image
        params:
          build: auth-source
          tag_file: auth-release/tag

  ### Creds
  - name: build-creds-latest
    plan:
      - get: creds-repo
        trigger: true
      - put: creds-image
        params:
          build: creds-repo
          tag_as_latest: true

  - name: build-creds-release
    plan:
      - get: studio-ci
      - get: creds-release
        trigger: true
        params:
          include_source_tarball: true
      - task: untar-release
        file: studio-ci/docker-images/tasks/untar-release.yml
        input_mapping: {release: creds-release}
        output_mapping: {source: creds-source}
      - put: creds-image
        params:
          build: creds-source
          tag_file: creds-release/tag

  ### GEH
  - name: build-geh-latest
    plan:
      - get: geh-repo
        trigger: true
      - put: geh-image
        params:
          build: geh-repo
          tag_as_latest: true

  - name: build-geh-release
    plan:
      - get: studio-ci
      - get: geh-release
        trigger: true
        params:
          include_source_tarball: true
      - task: untar-release
        file: studio-ci/docker-images/tasks/untar-release.yml
        input_mapping: {release: geh-release}
        output_mapping: {source: geh-source}
      - put: geh-image
        params:
          build: geh-source
          tag_file: geh-release/tag

  ### GraphQL
  - name: build-graphql-latest
    plan:
      - get: graphql-repo
        trigger: true
      - put: graphql-image
        params:
          build: graphql-repo
          tag_as_latest: true

  - name: build-graphql-release
    plan:
      - get: studio-ci
      - get: graphql-release
        trigger: true
        params:
          include_source_tarball: true
      - task: untar-release
        file: studio-ci/docker-images/tasks/untar-release.yml
        input_mapping: {release: graphql-release}
        output_mapping: {source: graphql-source}
      - put: graphql-image
        params:
          build: graphql-source
          tag_file: graphql-release/tag

  ### HTTP Service
  - name: build-http-latest
    plan:
      - get: http-repo
        trigger: true
      - put: http-image
        params:
          build: http-repo
          tag_as_latest: true

  - name: build-http-release
    plan:
      - get: studio-ci
      - get: http-release
        trigger: true
        params:
          include_source_tarball: true
      - task: untar-release
        file: studio-ci/docker-images/tasks/untar-release.yml
        input_mapping: {release: http-release}
        output_mapping: {source: http-source}
      - put: http-image
        params:
          build: http-source
          tag_file: http-release/tag

  ### Router
  - name: build-router-latest
    plan:
      - get: router-repo
        trigger: true
      - put: router-image
        params:
          build: router-repo
          tag_as_latest: true

  - name: build-router-release
    plan:
      - get: studio-ci
      - get: router-release
        trigger: true
        params:
          include_source_tarball: true
      - task: untar-release
        file: studio-ci/docker-images/tasks/untar-release.yml
        input_mapping: {release: router-release}
        output_mapping: {source: router-source}
      - put: router-image
        params:
          build: router-source
          tag_file: router-release/tag

  ### Runtime
  - name: build-runtime-latest
    plan:
      - get: runtime-repo
        trigger: true
      - put: runtime-image
        params:
          build: runtime-repo
          tag_as_latest: true

  - name: build-runtime-release
    plan:
      - get: studio-ci
      - get: runtime-release
        trigger: true
        params:
          include_source_tarball: true
      - task: untar-release
        file: studio-ci/docker-images/tasks/untar-release.yml
        input_mapping: {release: runtime-release}
        output_mapping: {source: runtime-source}
      - put: runtime-image
        params:
          build: runtime-source
          tag_file: runtime-release/tag

  ### Schema
  - name: build-schema-latest
    plan:
      - get: schema-repo
        trigger: true
      - put: schema-image
        params:
          build: schema-repo
          tag_as_latest: true

  - name: build-schema-release
    plan:
      - get: studio-ci
      - get: schema-release
        trigger: true
        params:
          include_source_tarball: true
      - task: untar-release
        file: studio-ci/docker-images/tasks/untar-release.yml
        input_mapping: {release: schema-release}
        output_mapping: {source: schema-source}
      - put: schema-image
        params:
          build: schema-source
          tag_file: schema-release/tag

  - name: build-schema-ci-latest
    plan:
      - get: schema-ci-repo
        trigger: true
      - put: schema-ci-image
        params:
          build: schema-ci-repo/ci/docker
          tag_as_latest: true

  ### SLS
  - name: build-sls-latest
    plan:
      - get: sls-repo
        trigger: true
      - put: sls-image
        params:
          build: sls-repo
          tag_as_latest: true

  - name: build-sls-release
    plan:
      - get: studio-ci
      - get: sls-release
        trigger: true
        params:
          include_source_tarball: true
      - task: extract-tag
        file: studio-ci/docker-images/tasks/extract-tag.yml
        input_mapping: {release: sls-release}
        output_mapping: {tag-env-var: sls-tag-env-var}
      - task: untar-release
        file: studio-ci/docker-images/tasks/untar-release.yml
        input_mapping: {release: sls-release}
        output_mapping: {source: sls-source}
      - put: sls-image
        params:
          build: sls-source
          build_args_file: sls-tag-env-var/tag-env-var.json
          tag_file: sls-release/tag

  ### Studio
  - name: build-studio-latest
    plan:
      - get: studio-repo
        trigger: true
      - put: studio-image
        params:
          build: studio-repo
          tag_as_latest: true

  - name: build-studio-release
    plan:
      - get: studio-ci
      - get: studio-release
        trigger: true
        params:
          include_source_tarball: true
      - task: untar-release
        file: studio-ci/docker-images/tasks/untar-release.yml
        input_mapping: {release: studio-release}
        output_mapping: {source: studio-source}
      - put: studio-image
        params:
          build: studio-source
          tag_file: studio-release/tag

  ### Worker
  - name: build-worker-latest
    plan:
      - get: worker-repo
        trigger: true
      - put: worker-image
        params:
          build: worker-repo
          tag_as_latest: true

  - name: build-worker-release
    plan:
      - get: studio-ci
      - get: worker-release
        trigger: true
        params:
          include_source_tarball: true
      - task: untar-release
        file: studio-ci/docker-images/tasks/untar-release.yml
        input_mapping: {release: worker-release}
        output_mapping: {source: worker-source}
      - put: worker-image
        params:
          build: worker-source
          tag_file: worker-release/tag
